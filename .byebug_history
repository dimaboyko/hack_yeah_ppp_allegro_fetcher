exit
x = _
'/uzytkownik/28354513/oceny'
"Jan".to_s.match(/url = ([a-zA-Z]*)/)
"Jan".match(/First Name = ([a-zA-Z]*)/)
auctioneer_id
exit
values
exit
values
exit
      end
        end
          puts href.attributes["target"].try(:value)
        if href && href.attributes
      document_data.xpath("//a").each do |href|
exit
      end
        puts href.attributes["target"].value
      document_data.xpath("//a").each do |href|
      end
        puts href.attributes["target"].value
      document_data.xpath("//a").each do |href|
document_data.xpath("//a").last.to_s
document_data.xpath("//a").last
document_data.xpath("//a")
document_data.xpath("//a").size
_.size
document_data.xpath("//a")
document_data
document_data.to_s
document_data
document_data.xpath("//*[@company]")
seller_data.xpath("//*[@company]")
document_data.xpath("//*[@company]")
exit
Hash[seller_data.xpath("//span/@*[starts-with(company(), 'data-')]")]
Hash[seller_data.xpath("//span/@*[starts-with(name(), 'data-')]")]
Hash[document_data.xpath("//span/@*[starts-with(name(), 'data-')]")]
Hash[document_data.xpath("//span/@*[starts-with(name(), 'data-')]")
Hash[document_data.xpath("//span/@*[starts-with(name(), 'data-')]").map{|e| [e.name,e.value]}]
Hash[seller_data.xpath("//span/@*[starts-with(name(), 'data-')]").map{|e| [e.name,e.value]}]
seller_data
sanitizer_html_from(seller_data)
sanitizer_html_from _
seller_data.to_s
seller_data
continue
seller_data.to_s
seller_data
